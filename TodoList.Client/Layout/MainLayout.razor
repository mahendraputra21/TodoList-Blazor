@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<div class="bb-page @(_isDarkMode ? "dark-mode" : "")">
    <Sidebar @ref="sidebar"
             IconName="IconName.BootstrapFill"
             Title="Demo Todo List"
             DataProvider="SidebarDataProvider" 
             CssClass="@(_isDarkMode ? "sidebar-dark" : "sidebar-light")" 
             />
    <main>
        <div class="bb-top-row px-4 d-flex justify-content-between align-items-center">
            <Button Color="ButtonColor.Primary" @onclick="ToggleTheme">
                <Icon Name="@(_isDarkMode ? IconName.Sun : IconName.Moon)" /> Switch Theme
            </Button>
            @* <LoginDisplay /> *@
        </div>
        <article class="content px-4">
            <div class="py-2">@Body</div>
        </article>
    </main>
</div>

@code {
    Sidebar sidebar;
    IEnumerable<NavItem> navItems;
    private bool _isDarkMode = false;

    protected override async Task OnInitializedAsync()
    {
        _isDarkMode = await GetCurrentThemeAsync();
    }

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();
        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/", IconName = IconName.HouseDoorFill, Text = "Home", Match=NavLinkMatch.All},
            new NavItem { Id = "2", Href = "/todo", IconName = IconName.Table, Text = "Todo List"},
        };
        return navItems;
    }

    private async Task ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        await SetThemeAsync(_isDarkMode);
        
    }

    private async Task<bool> GetCurrentThemeAsync()
    {
        return await JSRuntime.InvokeAsync<bool>("eval", "document.documentElement.getAttribute('data-bs-theme') === 'dark'");
    }

    private async Task SetThemeAsync(bool isDarkMode)
    {
        var theme = isDarkMode ? "dark" : "light";
        await JSRuntime.InvokeVoidAsync("eval", $"document.documentElement.setAttribute('data-bs-theme', '{theme}')");
    }
}